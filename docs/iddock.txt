1 createID(type: byte2, hashData) {

   objectID = creator’s address(20bytes) + type(2 bytes) + internal ID(8 bytes, should incremented by 1 automatically so that the objectID is globally unique) 

   sequenceID = objectID + ‘00’(nonce)

   Save sequenceID, hashData

   Set objectID’s owner as creator’s address

   sequenceID should show up in the transaction receipt, 

}


2 updateID(objectID, hashData) {

  require(objectID’s owner is the current user's address)

  require(objectID’s coordinators' array has the current user's address)

  sequenceID = objectID + (latestNonce + 1)

  Save sequenceID, hashData

  sequenceID should show up in the transaction receipt, 

}


3 changeOwner(objectID, newOwnerAddress) {

  require(objectID’s owner is the current user's address)

  Set objectID’s owner as newOwnerAddress

}


4 getHashDataBySequenceID(sequenceID) {

  Return hashData of that sequenceID

}


5 addCoordinator(objectID, newAddress) {

  require(objectID’s owner is the current user's address)

  push newAddress to objectID's coordinator array

}

6 removeCoordinator(objectID, newAddress) {

  require(objectID’s owner is the current user's address)

  remove newAddress from objectID's coordinator array

}